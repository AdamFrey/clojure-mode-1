[{:module-id :main, :name :main, :output-name "main.js", :entries [codemirror-next.clojure], :depends-on nil, :sources ["goog/base.js" "goog/debug/error.js" "goog/dom/nodetype.js" "goog/asserts/asserts.js" "goog/reflect/reflect.js" "goog/math/long.js" "goog/math/integer.js" "goog/dom/asserts.js" "goog/functions/functions.js" "goog/array/array.js" "goog/dom/htmlelement.js" "goog/dom/tagname.js" "goog/object/object.js" "goog/dom/tags.js" "goog/html/trustedtypes.js" "goog/string/typedstring.js" "goog/string/const.js" "goog/html/safescript.js" "goog/fs/url.js" "goog/i18n/bidi.js" "goog/html/trustedresourceurl.js" "goog/string/internal.js" "goog/html/safeurl.js" "goog/html/safestyle.js" "goog/html/safestylesheet.js" "goog/labs/useragent/util.js" "goog/labs/useragent/browser.js" "goog/html/safehtml.js" "goog/html/uncheckedconversions.js" "goog/dom/safe.js" "goog/string/string.js" "goog/structs/structs.js" "goog/math/math.js" "goog/iter/iter.js" "goog/structs/map.js" "goog/uri/utils.js" "goog/uri/uri.js" "goog/string/stringbuffer.js" "cljs/core.cljs" "codemirror_next/clojure/clojure_syntax.js" "shadow/js.js" "node_modules/@codemirror/next/text/dist/index.js" "node_modules/lezer-tree/dist/tree.cjs" "node_modules/@codemirror/next/state/dist/index.js" "node_modules/style-mod/dist/style-mod.cjs" "node_modules/@codemirror/next/rangeset/dist/index.js" "node_modules/w3c-keyname/index.cjs" "node_modules/@codemirror/next/view/dist/index.js" "node_modules/@codemirror/next/closebrackets/dist/index.js" "node_modules/@codemirror/next/highlight/dist/index.js" "node_modules/@codemirror/next/history/dist/index.js" "node_modules/@codemirror/next/matchbrackets/dist/index.js" "node_modules/@codemirror/next/syntax/dist/index.js" "node_modules/process/browser.js" "node_modules/lezer/dist/index.cjs" "node_modules/lezer-generator/dist/index.cjs" "applied_science/js_interop/impl.cljs" "applied_science/js_interop.cljs" "codemirror_next/clojure/selections.cljs" "codemirror_next/clojure/util.cljs" "codemirror_next/clojure/node.cljs" "codemirror_next/clojure/chars.cljs" "clojure/string.cljs" "codemirror_next/test_utils.cljs" "node_modules/@codemirror/next/commands/dist/index.js" "codemirror_next/clojure/extensions/formatting.cljs" "codemirror_next/clojure/commands.cljs" "codemirror_next/clojure/extensions/close_brackets.cljs" "clojure/set.cljs" "codemirror_next/clojure/keymap.cljs" "shadow/resource.cljs" "codemirror_next/clojure.cljs" "shadow/module/main/append.js"]}]